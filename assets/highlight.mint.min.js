hljs.registerLanguage("mint",(()=>{"use strict";return e=>{const n=[],s={
keywords:{
keyword:["let","enum", "const","global","next","component","store","module","record","enum","style","routes","provider","suite","test","fun","get","property","state","next","try","sequence","parallel|10","if","else","catch","case","connect","where","when","then","finally","use","for","of","with","as","decode","encode","exposing|10","using|10"],
literal:["true","false"]}},a={illegal:/</,relevance:0,endsWithParent:!0,
contains:[{begin:"[A-Za-z0-9\\._:-]+",className:"attr",relevance:0},{
begin:/=\s*/,relevance:0,contains:[{begin:"\\{",end:"\\}",className:"tag",
endsParent:!0,contains:n},e.QUOTE_STRING_MODE,e.APOS_STRING_MODE]}]}
;return n.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.REGEXP_MODE,{
begin:"\\b\\d+(\\.\\d+)?",end:"\\B|\\b",className:"number",relevance:0},{
begin:'"',end:'"',className:"string",contains:[e.BACKSLASH_ESCAPE]},{begin:"`",
end:"`",subLanguage:"javascript",excludeBegin:!0,excludeEnd:!0},{
begin:"\\b[A-Z][A-Za-z0-9]+",className:"type",relevance:0},{begin:"<{",end:"}>",
className:"tag",contains:n},{begin:"</?(?=\\w+)",end:"/?>",className:"tag",
contains:[{begin:/[^\/><\s]+/,className:"name",relevance:0},a]},{
begin:"style\\s+[a-zA-Z0-9-]+\\s*{",end:"}",keywords:s,contains:[{
begin:"(?=[-a-zA-Z0-9]+\\s*:\\s*[^\\s;]+)",end:";",contains:[{
begin:"[-a-zA-Z0-9]+\\s*",end:":",className:"string",excludeEnd:!0},{
begin:"[^;]+",end:";",excludeEnd:!0,endsParent:!0}]}]}),{name:"Mint",keywords:s,
contains:n}}})());
